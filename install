#!/bin/bash

clear

# if [ $EUID != 0 ]
# then
#     source $HOME/.dotfiles/formatting_vars
#     echo -e "${ESC_CHAR}${BOLD}$(($RED))${END}You must run this as root"
#     exit
# fi

# HOME="/home/${SUDO_USER}"

echo -e "Log file\n" > $HOME/.dotfiles/log.txt
log_file="${HOME}/.dotfiles/log.txt"

source $HOME/.dotfiles/install_packages_arch

echo "Here are the supported package managers:"
echo "  1. Pacman"
echo "  2. Apt"
read -p "Select which you are using: " environment
if [[ $environment != '1' && $environment != '2' ]]; then
    echo "Invalid input: exiting..."
    exit
fi
if [[ $environment == '1' ]]; then
    echo "arch"
    source $HOME/.dotfiles/install_packages_arch
elif [[ $environment == '2' ]]; then
    source $HOME/.dotfiles/install_packages_apt
fi

echo "Here are the supported environments:"
echo "  1. Hyprland"
echo "  2. KDE Plasma"
read -p "Select which you are using: " environment
if [[ $environment != '1' && $environment != '2' ]]; then
    echo "Invalid input: exiting..."
    exit
fi

clear
read -p "Install packages? [Y/n] "
if [[ $REPLY == '' || $REPLY == 'y' || $REPLY == 'Y' ]]; then
    echo "Working..."
    install_base_packages &>> $log_file
    install_environment_packages $environment &>> $log_file
fi

clear
read -p "Install config files [Y/n] "
if [[ $REPLY == '' || $REPLY == 'y' || $REPLY == 'Y' ]]; then
    mkdir -p $HOME/.config
    cp -rf $HOME/.dotfiles/configs/general/* $HOME/.config
    cp -rf $HOME/.dotfiles/Pictures/* $HOME/Pictures
    if [[ $environment == '1' ]]; then
        cp -rf $HOME/.dotfiles/configs/hyprland/* $HOME/.config
    elif [[ $environment == '2' ]]; then
        cp -rf $HOME/.dotfiles/configs/kde/* $HOME/.config
    fi
fi

clear
read -p "Install grub theme [Y/n] "
if [[ $REPLY == '' || $REPLY == 'y' || $REPLY == 'Y' ]]; then
    sudo $HOME/.dotfiles/configs/grub/install
fi

clear
read -p "Install sddm theme [Y/n] "
if [[ $REPLY == '' || $REPLY == 'y' || $REPLY == 'Y' ]]; then
    install_sddm_packages
    sudo $HOME/.dotfiles/configs/sddm/install
fi

clear
read -p "Install yay? [Y/n] "
if [[ $REPLY == '' || $REPLY == 'y' || $REPLY == 'Y' ]]; then
    git clone https://aur.archlinux.org/yay.git $HOME/yay
    (cd $HOME/yay && makepkg -si)
    rm -rf $HOME/yay
fi

clear
read -p "Install zsh? [Y/n] "
if [[ $REPLY == '' || $REPLY == 'y' || $REPLY == 'Y' ]]; then
    install_zsh
    
    chsh -s /bin/zsh

    cp -f $HOME/.dotfiles/configs/.zshrc $HOME/.zshrc
    cp -f $HOME/.dotfiles/configs/.zshenv $HOME/.zshenv

    git clone https://github.com/zsh-users/zsh-autosuggestions $HOME/.zsh/zsh-autosuggestions
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $HOME/.zsh/zsh-syntax-highlighting
    
    exists=$(cat $HOME/.zshrc | grep -c "zsh-autosuggestions")
    if [[ $exists == 0 ]]; then
        echo "source ${HOME}/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh" >> $HOME/.zshrc
    fi
    
    exists=$(cat $HOME/.zshrc | grep -c "zsh-syntax-highlighting")
    if [[ $exists == 0 ]]; then
        echo "source ${HOME}/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" >> $HOME/.zshrc
    fi
fi

clear
read -p "Install gaming applications [Y/n] "
if [[ $REPLY == '' || $REPLY == 'y' || $REPLY == 'Y' ]]; then
    curl -L -o $HOME/Applications/osu.AppImage https://github.com/ppy/osu/releases/latest/download/osu.AppImage
    cp -f $HOME/.dotfiles/misc/osu.desktop $HOME/.local/share/applications
fi

clear

